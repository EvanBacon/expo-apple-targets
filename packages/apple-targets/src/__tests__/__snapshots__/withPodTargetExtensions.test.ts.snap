// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`adds both changes 1`] = `
"require File.join(File.dirname(\`node --print \\"require.resolve('expo/package.json')\\"\`), \\"scripts/autolinking\\")
require File.join(File.dirname(\`node --print \\"require.resolve('react-native/package.json')\\"\`), \\"scripts/react_native_pods\\")

require 'json'
podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}

ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'
ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']

platform :ios, podfile_properties['ios.deploymentTarget'] || '15.1'
install! 'cocoapods',
  :deterministic_uuids => false

prepare_react_native_project!
# @generated begin apple-targets-extension-loader - expo prebuild (DO NOT MODIFY) sync-244cfcad9112c0b387ff7ecc1992cb356626f7fe

post_install_hooks = []

Dir.glob(File.join(__dir__, '..', 'targets', '**', 'pods.rb')).each do |target_file|
  target_name = File.basename(File.dirname(target_file))
  target target_name do
    target_binding = binding
    target_binding.local_variable_set(:podfile_properties, podfile_properties)

    eval(File.read(target_file), target_binding, target_file)

    if target_binding.local_variable_defined?(:target_post_install)
      post_install_hooks ||= []
      post_install_hooks << target_binding.local_variable_get(:target_post_install)
    end
  end
end

# @generated end apple-targets-extension-loader

target 'HelloWorld' do
  use_expo_modules!

  if ENV['EXPO_USE_COMMUNITY_AUTOLINKING'] == '1'
    config_command = ['node', '-e', \\"process.argv=['', '', 'config'];require('@react-native-community/cli').run()\\"];
  else
    config_command = [
      'node',
      '--no-warnings',
      '--eval',
      'require(require.resolve(\\\\'expo-modules-autolinking\\\\', { paths: [require.resolve(\\\\'expo/package.json\\\\')] }))(process.argv.slice(1))',
      'react-native-config',
      '--json',
      '--platform',
      'ios'
    ]
  end

  config = use_native_modules!(config_command)

  use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']
  use_frameworks! :linkage => ENV['USE_FRAMEWORKS'].to_sym if ENV['USE_FRAMEWORKS']

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => podfile_properties['expo.jsEngine'] == nil || podfile_properties['expo.jsEngine'] == 'hermes',
    # An absolute path to your application root.
    :app_path => \\"#{Pod::Config.instance.installation_root}/..\\",
    :privacy_file_aggregation_enabled => podfile_properties['apple.privacyManifestAggregationEnabled'] != 'false',
  )

  post_install do |installer|
# @generated begin apple-targets-extension-post-install - expo prebuild (DO NOT MODIFY) sync-d352962fa0b94d8aa90679ee0258481d46915020
    post_install_hooks.each do |hook|
      hook.call(installer)
    end
# @generated end apple-targets-extension-post-install
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      :ccache_enabled => podfile_properties['apple.ccacheEnabled'] == 'true',
    )

    # This is necessary for Xcode 14, because it signs resource bundles by default
    # when building for devices.
    installer.target_installation_results.pod_target_installation_results
      .each do |pod_name, target_installation_result|
      target_installation_result.resource_bundle_targets.each do |resource_bundle_target|
        resource_bundle_target.build_configurations.each do |config|
          config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
        end
      end
    end
  end
end
"
`;
